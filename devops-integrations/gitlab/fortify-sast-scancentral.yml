# Integrate Fortify ScanCentral Static AppSec Testing (SAST) into your Gitlab CICD pipeline
# The following Gitlab environment variables must be defined before using this job
#   - $FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN
#   - $FCLI_DEFAULT_SSC_CI_TOKEN
#   - $FCLI_DEFAULT_SSC_URL
#   - $FCLI_DEFAULT_SSC_USER
#   - $FCLI_DEFAULT_SSC_PASSWORD
#   - $SSC_AV_ID

fortify-sast:
  stage: test
  image: fortifydocker/fortify-ci-tools:latest
  needs: [build]
  variables:
    SC_SAST_SENSOR_VERSION: '22.2'
  script:
    - fcli ssc session login
    - fcli sc-sast session login

    - scancentral package -bt mvn -o package.zip 
    - fcli sc-sast scan start --package-file=package.zip --upload --sensor-version=$SC_SAST_SENSOR_VERSION --appversion=$SSC_AV_ID --store '?'

    - fcli sc-sast scan wait-for '?' --interval=30s

    - FortifyVulnerabilityExporter SSCToGitLabSAST --ssc.baseUrl=$FCLI_DEFAULT_SSC_URL --ssc.user="$FCLI_DEFAULT_SSC_USER" --ssc.password="$FCLI_DEFAULT_SSC_PASSWORD" --ssc.version.id=$SSC_AV_ID

    - fcli sc-sast session logout
    - fcli ssc session logout  
  allow_failure: true
  artifacts:
    reports:
      sast: gl-fortify-sast.json
    expire_in: 3 days
    when: always
